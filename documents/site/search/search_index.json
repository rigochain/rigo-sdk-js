{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview This document describes the JavaScript SDK for ARCANEX. Browserify npm install gulp <script type='text/javascript' src='arcanex.js'></script> RPC API 'arcanex-sdk-js' \ub294 ARCANEX \ub178\ub4dc\uac00 \uc81c\uacf5\ud558\ub294 JSONRPC \ub97c \ud638\ucd9c\ud558\ub294 API \uc9d1\ud569\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 RPC \ub97c \ucc38\uace0\ud55c\ub2e4. Event Subscription 'arcanex-sdk-js' \ub294 ARCANEX \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ub2e4\uc591\ud55c \uc774\ubca4\ud2b8\ub97c websocket \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\uc2dc\uac04 \uad6c\ub3c5\ud558\uae30 \uc704\ud55c API \uc9d1\ud569\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 Event Subscription \ub97c \ucc38\uace0\ud55c\ub2e4.","title":"Overview"},{"location":"#overview","text":"This document describes the JavaScript SDK for ARCANEX.","title":"Overview"},{"location":"#browserify","text":"npm install gulp <script type='text/javascript' src='arcanex.js'></script>","title":"Browserify"},{"location":"#rpc-api","text":"'arcanex-sdk-js' \ub294 ARCANEX \ub178\ub4dc\uac00 \uc81c\uacf5\ud558\ub294 JSONRPC \ub97c \ud638\ucd9c\ud558\ub294 API \uc9d1\ud569\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 RPC \ub97c \ucc38\uace0\ud55c\ub2e4.","title":"RPC API"},{"location":"#event-subscription","text":"'arcanex-sdk-js' \ub294 ARCANEX \ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ub2e4\uc591\ud55c \uc774\ubca4\ud2b8\ub97c websocket \uc744 \uc0ac\uc6a9\ud558\uc5ec \uc2e4\uc2dc\uac04 \uad6c\ub3c5\ud558\uae30 \uc704\ud55c API \uc9d1\ud569\uc744 \uc81c\uacf5\ud55c\ub2e4. \uc774\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 Event Subscription \ub97c \ucc38\uace0\ud55c\ub2e4.","title":"Event Subscription"},{"location":"account/","text":"Account Account API \ub97c \uc0ac\uc6a9\ud558\uc5ec ARCANEX Account \ub97c \uc0dd\uc131\ud558\uace0, \uc804\uc790\uc11c\uba85 \ubc0f \uc804\uc790\uc11c\uba85 \uac80\uc99d\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub2e4. Account \uac1d\uccb4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc815\ubcf4\ub97c \uac16\ub294\ub2e4. class Account { address: string name: string nonce: number balance: string } address : \uacc4\uc815(Account)\uc758 \uc8fc\uc18c. 20bytes Hex String (40chars). name : \uacc4\uc815(Account)\uc758 \uc774\ub984. ( not implemented yet. \ud5a5\ud6c4 Account Name Service \ub97c \uc704\ud568. ). nonce : \ud604\uc7ac \uacc4\uc815\uc774 \uc9c0\uae08\uae4c\uc9c0 \ubc1c\ud589\ud55c \ud2b8\ub79c\uc7ad\uc158 \uc218. balance : \uacc4\uc815\uc758 \uc794\uc561. nonce \uc640, balance \uc815\ubcf4\ub294 \ube14\ub85d\uccb4\uc778\uc5d0 \uae30\ub85d\ub41c \uac12\uc73c\ub85c \ub3d9\uae30\ud654\uac00 \uc774\ub8e8\uc5b4\uc838\uc57c \ud55c\ub2e4. New \uc0c8\ub85c\uc6b4 Account \uac1d\uccb4\ub97c \uc0dd\uc131\ud55c\ub2e4. static New(nm: string, secret: string): Account Parameters nm : \uacc4\uc815 \uc774\ub984. secret : \uacc4\uc815\uc758 Private Key \uc554\ud638\ud654\ub97c \uc704\ud55c \ube44\ubc00\ubc88\ud638. Returns Account \uac1d\uccb4. Import \uc678\ubd80\uc5d0 \uc874\uc7ac\ud558\ub294 Private Key \ub97c \uac00\uc838\uc640 Account \ub97c \uc0dd\uc131\ud55c\ub2e4. static Import(nm: string, secret: string, d: Bytes, dsecret?:string): Account Parameters nm : \uacc4\uc815 \uc774\ub984. secret : \uacc4\uc815\uc758 Private Key \uc554\ud638\ud654\ub97c \uc704\ud55c \ube44\ubc00\ubc88\ud638. d : Private Key. dsecret : d \uac00 \uc554\ud638\ud654\ub41c \ud615\ud0dc\ub77c\uba74, \uc774\ub97c \ubcf5\ud638\ud654 \ud558\uae30 \uc704\ud55c \ube44\ubc00\ubc88\ud638. ( not implemented yet ) Returns Account \uac1d\uccb4. sign \ud604\uc7ac \uacc4\uc815\uc758 Private Key \ub85c \uc804\uc790\uc11c\uba85\uc744 \uc0dd\uc131\ud55c\ub2e4. sign(msg: Uint8Array): Bytes Parameters msg : \uc804\uc790\uc11c\uba85 \ub300\uc0c1 \uba54\uc2dc\uc9c0 \ub370\uc774\ud130. Returns \uc804\uc790\uc11c\uba85 \ub370\uc774\ud130. Examples ... let msg = new TextEncoder().encode(\"this is message to be signed\"); const sig = acct.sign(msg) console.log(sig.toHex()) // 65bytes hex-string (130chars) verify \ud604\uc7ac \uacc4\uc815\uc758 Public Key \ub85c \uc804\uc790\uc11c\uba85\uc744 \uac80\uc99d\ud55c\ub2e4. verify(sig: Uint8Array, msg: Uint8Array): boolean Parameters sig : \uc804\uc790\uc11c\uba85 \ub370\uc774\ud130. 65bytes. msg : \uc804\uc790\uc11c\uba85 \ub300\uc0c1 \uba54\uc2dc\uc9c0 \ub370\uc774\ud130. Returns \uc804\uc790\uc11c\uba85 \uac80\uc99d \uacb0\uacfc. Examples ... const ret = acct.verify(sig, msg) console.log(\"verify result\", ret) // true or false","title":"Account"},{"location":"account/#account","text":"Account API \ub97c \uc0ac\uc6a9\ud558\uc5ec ARCANEX Account \ub97c \uc0dd\uc131\ud558\uace0, \uc804\uc790\uc11c\uba85 \ubc0f \uc804\uc790\uc11c\uba85 \uac80\uc99d\uc744 \uc218\ud589\ud560 \uc218 \uc788\ub2e4. Account \uac1d\uccb4\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc815\ubcf4\ub97c \uac16\ub294\ub2e4. class Account { address: string name: string nonce: number balance: string } address : \uacc4\uc815(Account)\uc758 \uc8fc\uc18c. 20bytes Hex String (40chars). name : \uacc4\uc815(Account)\uc758 \uc774\ub984. ( not implemented yet. \ud5a5\ud6c4 Account Name Service \ub97c \uc704\ud568. ). nonce : \ud604\uc7ac \uacc4\uc815\uc774 \uc9c0\uae08\uae4c\uc9c0 \ubc1c\ud589\ud55c \ud2b8\ub79c\uc7ad\uc158 \uc218. balance : \uacc4\uc815\uc758 \uc794\uc561. nonce \uc640, balance \uc815\ubcf4\ub294 \ube14\ub85d\uccb4\uc778\uc5d0 \uae30\ub85d\ub41c \uac12\uc73c\ub85c \ub3d9\uae30\ud654\uac00 \uc774\ub8e8\uc5b4\uc838\uc57c \ud55c\ub2e4.","title":"Account"},{"location":"account/#new","text":"\uc0c8\ub85c\uc6b4 Account \uac1d\uccb4\ub97c \uc0dd\uc131\ud55c\ub2e4. static New(nm: string, secret: string): Account","title":"New"},{"location":"account/#parameters","text":"nm : \uacc4\uc815 \uc774\ub984. secret : \uacc4\uc815\uc758 Private Key \uc554\ud638\ud654\ub97c \uc704\ud55c \ube44\ubc00\ubc88\ud638.","title":"Parameters"},{"location":"account/#returns","text":"Account \uac1d\uccb4.","title":"Returns"},{"location":"account/#import","text":"\uc678\ubd80\uc5d0 \uc874\uc7ac\ud558\ub294 Private Key \ub97c \uac00\uc838\uc640 Account \ub97c \uc0dd\uc131\ud55c\ub2e4. static Import(nm: string, secret: string, d: Bytes, dsecret?:string): Account","title":"Import"},{"location":"account/#parameters_1","text":"nm : \uacc4\uc815 \uc774\ub984. secret : \uacc4\uc815\uc758 Private Key \uc554\ud638\ud654\ub97c \uc704\ud55c \ube44\ubc00\ubc88\ud638. d : Private Key. dsecret : d \uac00 \uc554\ud638\ud654\ub41c \ud615\ud0dc\ub77c\uba74, \uc774\ub97c \ubcf5\ud638\ud654 \ud558\uae30 \uc704\ud55c \ube44\ubc00\ubc88\ud638. ( not implemented yet )","title":"Parameters"},{"location":"account/#returns_1","text":"Account \uac1d\uccb4.","title":"Returns"},{"location":"account/#sign","text":"\ud604\uc7ac \uacc4\uc815\uc758 Private Key \ub85c \uc804\uc790\uc11c\uba85\uc744 \uc0dd\uc131\ud55c\ub2e4. sign(msg: Uint8Array): Bytes","title":"sign"},{"location":"account/#parameters_2","text":"msg : \uc804\uc790\uc11c\uba85 \ub300\uc0c1 \uba54\uc2dc\uc9c0 \ub370\uc774\ud130.","title":"Parameters"},{"location":"account/#returns_2","text":"\uc804\uc790\uc11c\uba85 \ub370\uc774\ud130.","title":"Returns"},{"location":"account/#examples","text":"... let msg = new TextEncoder().encode(\"this is message to be signed\"); const sig = acct.sign(msg) console.log(sig.toHex()) // 65bytes hex-string (130chars)","title":"Examples"},{"location":"account/#verify","text":"\ud604\uc7ac \uacc4\uc815\uc758 Public Key \ub85c \uc804\uc790\uc11c\uba85\uc744 \uac80\uc99d\ud55c\ub2e4. verify(sig: Uint8Array, msg: Uint8Array): boolean","title":"verify"},{"location":"account/#parameters_3","text":"sig : \uc804\uc790\uc11c\uba85 \ub370\uc774\ud130. 65bytes. msg : \uc804\uc790\uc11c\uba85 \ub300\uc0c1 \uba54\uc2dc\uc9c0 \ub370\uc774\ud130.","title":"Parameters"},{"location":"account/#returns_3","text":"\uc804\uc790\uc11c\uba85 \uac80\uc99d \uacb0\uacfc.","title":"Returns"},{"location":"account/#examples_1","text":"... const ret = acct.verify(sig, msg) console.log(\"verify result\", ret) // true or false","title":"Examples"},{"location":"acnet/","text":"RPC queryAccount syncAccount queryValidators queryStakes queryDeslegatee broadcastTrxSync queryTrx queryBlockByHeight queryBlockByHash queryRule getClient setUrl getUrl","title":"RPC"},{"location":"acnet/#rpc","text":"","title":"RPC"},{"location":"acnet/#queryaccount","text":"","title":"queryAccount"},{"location":"acnet/#syncaccount","text":"","title":"syncAccount"},{"location":"acnet/#queryvalidators","text":"","title":"queryValidators"},{"location":"acnet/#querystakes","text":"","title":"queryStakes"},{"location":"acnet/#querydeslegatee","text":"","title":"queryDeslegatee"},{"location":"acnet/#broadcasttrxsync","text":"","title":"broadcastTrxSync"},{"location":"acnet/#querytrx","text":"","title":"queryTrx"},{"location":"acnet/#queryblockbyheight","text":"","title":"queryBlockByHeight"},{"location":"acnet/#queryblockbyhash","text":"","title":"queryBlockByHash"},{"location":"acnet/#queryrule","text":"","title":"queryRule"},{"location":"acnet/#getclient","text":"","title":"getClient"},{"location":"acnet/#seturl","text":"","title":"setUrl"},{"location":"acnet/#geturl","text":"","title":"getUrl"},{"location":"subscriber/","text":"Subscriber Subscriber API \ub97c \uc0ac\uc6a9\ud558\uc5ec ARCANEX \ub124\ud06c\uc6cc\ud06c\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uad6c\ub3c5\ud560 \uc218 \uc788\ub2e4. import Subscriber from \"./subscriber\"; const sub = new Subscriber('ws://localhost:26657/websocket', \"tm.event = 'NewBlock'\"); sub.start( resp => { console.log(resp) }) ... sub.stop() constructor constructor (public url:string, public query:string) Parameters url : ARCANEX Node \uc758 websocket endpoint. query - string : \uad6c\ub3c5\ud558\uace0\uc790 \ud558\ub294 \uc774\ubca4\ud2b8 \uc870\uac74 \uc9c0\uc815. \uc774\ubca4\ud2b8 \ucffc\ub9ac\ubb38\uc740 key operator operand \ud615\uc2dd\uc758 string \uc73c\ub85c \uad6c\uc131\ub418\uba70, \ubcf5\uc218\uc758 \ucffc\ub9ac\ubb38\uc774 AND \ub85c \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4. \ucffc\ub9ac\ubb38 \uad6c\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 Event Query \ub97c \ucc38\uc870\ud55c\ub2e4. Returns Subscriber \uac1d\uccb4. start start API \ub97c \uc0ac\uc6a9\ud558\uc5ec Subscriber \uac1d\uccb4\uc758 \uad6c\ub3c5\uc744 \uc2dc\uc791 \ud560 \uc218 \uc788\ub2e4. start(cbFunc: (resp:string)=>void) Parameters cbFunc : \uc774\ubca4\ud2b8\ub97c \uc218\uc2e0\ud560 callback function. Returns N/A stop start API\ub97c \ud1b5\ud574 \uad6c\ub3c5\uc911\uc778 Subscriber \uac1d\uccb4\uc758 \uad6c\ub3c5\uc744 \uc911\uc9c0 \uc2dc\ud0a8\ub2e4. Parameters N/A Returns N/A Listen Subscriber \uac1d\uccb4\uc758 \uc0dd\uc131( constructor ) \uc640 \uad6c\ub3c5 \uc2dc\uc791( start )\uc744 Listener API \ud558\ub098\ub85c \uc218\ud589\ud560 \uc218 \uc788\ub2e4. Parameters url : ARCANEX Node \uc758 websocket endpoint. query : \uad6c\ub3c5\ud558\uace0\uc790 \ud558\ub294 \uc774\ubca4\ud2b8 \uc870\uac74 \uc9c0\uc815. cb : \uc774\ubca4\ud2b8\ub97c \uc218\uc2e0\ud560 callback function. Returns Subscriber \uac1d\uccb4. Examples var sub = Subscriber.Listen('ws://localhost:26657/websocket', \"tm.event='NewBlockHeader'\", (resp) => { if(!resp.data) { return } console.log(resp) // do something }) ... listener.stop() Event Query \uc774\ubca4\ud2b8 \ucffc\ub9ac\ub294 \"key operator operand\" \ud615\uc2dd\uc758 string \uc73c\ub85c \uad6c\uc131\ub418\uba70, \ubcf5\uc218\uc758 \ucffc\ub9ac\ubb38\uc740 AND \ub85c \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4. key \uad6c\ub3c5\ud560 \uc774\ubca4\ud2b8\uc758 \uc885\ub958\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud558\uc5ec \uc0ac\uc6a9\ud558\uba70 ARCANEX \uc5d0 \uc0ac\uc804 \uc815\uc758\ub41c key \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. tm.event : \uad6c\ub3c5\ud560 \uc774\ubca4\ud2b8 \uc885\ub958\ub97c \uc81c\ud55c \ud55c\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. tm.event = 'NewBlock' tm.event = 'NewBlockHeader' tm.event = 'Tx' tx.hash : \ud2b8\ub79c\uc7ad\uc158 hash. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \ud2b8\ub79c\uc7ad\uc158 hash\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.height : \ud2b8\ub79c\uc7ad\uc158\uc774 \ud3ec\ud568\ub41c \ube14\ub85d\uc758 \ubc88\ud638. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. tx.type : \ud2b8\ub79c\uc7ad\uc158\uc758 \uc885\ub958. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. tx.type = 'transfer' tx.type = 'staking' tx.type = 'unstaking' tx.sender : \ud2b8\ub79c\uc7ad\uc158\uc758 sender \uc8fc\uc18c. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc18c\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.receiver - \ud2b8\ub79c\uc7ad\uc158\uc758 receiver \uc8fc\uc18c. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc18c\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.addrpair - \ud2b8\ub79c\uc7ad\uc158\uc758 sender | receiver \uc8fc\uc18c \ud569\uc131. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. operation key \uc640 operand \uc758 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\uba70, = , < , <= , > , >= , CONTAINS , EXISTS \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. operand key \uc758 \uac12\uc5d0 \ud574\ub2f9\ud55c\ub2e4. Example import Subscriber from \"./subscriber\"; // \uc2e0\uaddc\ub85c \ube14\ub85d\uc774 \uc0dd\uc131\ub420 \ub54c \ub9c8\ub2e4 \ube14\ub85d \uc815\ubcf4 \uad6c\ub3c5 var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'NewBlock'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 hash \uac00 'A7FC574491B18ADD8E3DD60E7442CB34D90A4862E30E9E9B5412154EBFB0E100' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.hash='A7FC574491B18ADD8E3DD60E7442CB34D90A4862E30E9E9B5412154EBFB0E100'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 \ud0c0\uc785\uc774 'transfer' \uc774\uace0, // sender \uc8fc\uc18c\uac00 'D8C2C3D121696F51B733F7CF36C8AE60F8F264CC' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.type='transfer' AND tx.sender='D8C2C3D121696F51B733F7CF36C8AE60F8F264CC'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 \ud0c0\uc785\uc774 'transfer' \uc774\uace0, // sender \uc8fc\uc18c\uac00 'D8C2C3D121696F51B733F7CF36C8AE60F8F264CC' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.type='transfer' AND tx.sender='D8C2C3D121696F51B733F7CF36C8AE60F8F264CC'\") sub.start( resp => console.log(resp) ) ...","title":"Subscriber"},{"location":"subscriber/#subscriber","text":"Subscriber API \ub97c \uc0ac\uc6a9\ud558\uc5ec ARCANEX \ub124\ud06c\uc6cc\ud06c\uc5d0\uc11c \ubc1c\uc0dd\ud558\ub294 \ud2b9\uc815 \uc774\ubca4\ud2b8\uc5d0 \ub300\ud55c \uc815\ubcf4\ub97c \uad6c\ub3c5\ud560 \uc218 \uc788\ub2e4. import Subscriber from \"./subscriber\"; const sub = new Subscriber('ws://localhost:26657/websocket', \"tm.event = 'NewBlock'\"); sub.start( resp => { console.log(resp) }) ... sub.stop()","title":"Subscriber"},{"location":"subscriber/#constructor","text":"constructor (public url:string, public query:string)","title":"constructor"},{"location":"subscriber/#parameters","text":"url : ARCANEX Node \uc758 websocket endpoint. query - string : \uad6c\ub3c5\ud558\uace0\uc790 \ud558\ub294 \uc774\ubca4\ud2b8 \uc870\uac74 \uc9c0\uc815. \uc774\ubca4\ud2b8 \ucffc\ub9ac\ubb38\uc740 key operator operand \ud615\uc2dd\uc758 string \uc73c\ub85c \uad6c\uc131\ub418\uba70, \ubcf5\uc218\uc758 \ucffc\ub9ac\ubb38\uc774 AND \ub85c \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4. \ucffc\ub9ac\ubb38 \uad6c\uc131\uc5d0 \ub300\ud55c \uc790\uc138\ud55c \uc0ac\ud56d\uc740 Event Query \ub97c \ucc38\uc870\ud55c\ub2e4.","title":"Parameters"},{"location":"subscriber/#returns","text":"Subscriber \uac1d\uccb4.","title":"Returns"},{"location":"subscriber/#start","text":"start API \ub97c \uc0ac\uc6a9\ud558\uc5ec Subscriber \uac1d\uccb4\uc758 \uad6c\ub3c5\uc744 \uc2dc\uc791 \ud560 \uc218 \uc788\ub2e4. start(cbFunc: (resp:string)=>void)","title":"start"},{"location":"subscriber/#parameters_1","text":"cbFunc : \uc774\ubca4\ud2b8\ub97c \uc218\uc2e0\ud560 callback function.","title":"Parameters"},{"location":"subscriber/#returns_1","text":"N/A","title":"Returns"},{"location":"subscriber/#stop","text":"start API\ub97c \ud1b5\ud574 \uad6c\ub3c5\uc911\uc778 Subscriber \uac1d\uccb4\uc758 \uad6c\ub3c5\uc744 \uc911\uc9c0 \uc2dc\ud0a8\ub2e4.","title":"stop"},{"location":"subscriber/#parameters_2","text":"N/A","title":"Parameters"},{"location":"subscriber/#returns_2","text":"N/A","title":"Returns"},{"location":"subscriber/#listen","text":"Subscriber \uac1d\uccb4\uc758 \uc0dd\uc131( constructor ) \uc640 \uad6c\ub3c5 \uc2dc\uc791( start )\uc744 Listener API \ud558\ub098\ub85c \uc218\ud589\ud560 \uc218 \uc788\ub2e4.","title":"Listen"},{"location":"subscriber/#parameters_3","text":"url : ARCANEX Node \uc758 websocket endpoint. query : \uad6c\ub3c5\ud558\uace0\uc790 \ud558\ub294 \uc774\ubca4\ud2b8 \uc870\uac74 \uc9c0\uc815. cb : \uc774\ubca4\ud2b8\ub97c \uc218\uc2e0\ud560 callback function.","title":"Parameters"},{"location":"subscriber/#returns_3","text":"Subscriber \uac1d\uccb4.","title":"Returns"},{"location":"subscriber/#examples","text":"var sub = Subscriber.Listen('ws://localhost:26657/websocket', \"tm.event='NewBlockHeader'\", (resp) => { if(!resp.data) { return } console.log(resp) // do something }) ... listener.stop()","title":"Examples"},{"location":"subscriber/#event-query","text":"\uc774\ubca4\ud2b8 \ucffc\ub9ac\ub294 \"key operator operand\" \ud615\uc2dd\uc758 string \uc73c\ub85c \uad6c\uc131\ub418\uba70, \ubcf5\uc218\uc758 \ucffc\ub9ac\ubb38\uc740 AND \ub85c \uc5f0\uacb0\ub420 \uc218 \uc788\ub2e4.","title":"Event Query"},{"location":"subscriber/#key","text":"\uad6c\ub3c5\ud560 \uc774\ubca4\ud2b8\uc758 \uc885\ub958\ub97c \uc81c\ud55c\ud558\uae30 \uc704\ud558\uc5ec \uc0ac\uc6a9\ud558\uba70 ARCANEX \uc5d0 \uc0ac\uc804 \uc815\uc758\ub41c key \ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4. tm.event : \uad6c\ub3c5\ud560 \uc774\ubca4\ud2b8 \uc885\ub958\ub97c \uc81c\ud55c \ud55c\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc774 \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. tm.event = 'NewBlock' tm.event = 'NewBlockHeader' tm.event = 'Tx' tx.hash : \ud2b8\ub79c\uc7ad\uc158 hash. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \ud2b8\ub79c\uc7ad\uc158 hash\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.height : \ud2b8\ub79c\uc7ad\uc158\uc774 \ud3ec\ud568\ub41c \ube14\ub85d\uc758 \ubc88\ud638. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. tx.type : \ud2b8\ub79c\uc7ad\uc158\uc758 \uc885\ub958. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4. tx.type = 'transfer' tx.type = 'staking' tx.type = 'unstaking' tx.sender : \ud2b8\ub79c\uc7ad\uc158\uc758 sender \uc8fc\uc18c. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc18c\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.receiver - \ud2b8\ub79c\uc7ad\uc158\uc758 receiver \uc8fc\uc18c. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4. \uc8fc\uc18c\ub294 0x \ub97c \uc81c\uac70\ud55c \ub300\ubb38\uc790 Hex-String \uc73c\ub85c \uc9c0\uc815\ud55c\ub2e4. tx.addrpair - \ud2b8\ub79c\uc7ad\uc158\uc758 sender | receiver \uc8fc\uc18c \ud569\uc131. tm.event='Tx' \uc640 \ud568\uaed8 \uc0ac\uc6a9\ub41c\ub2e4.","title":"key"},{"location":"subscriber/#operation","text":"key \uc640 operand \uc758 \uad00\uacc4\ub97c \ub098\ud0c0\ub0b4\uba70, = , < , <= , > , >= , CONTAINS , EXISTS \uac12\uc744 \uac00\uc9c8 \uc218 \uc788\ub2e4.","title":"operation"},{"location":"subscriber/#operand","text":"key \uc758 \uac12\uc5d0 \ud574\ub2f9\ud55c\ub2e4.","title":"operand"},{"location":"subscriber/#example","text":"import Subscriber from \"./subscriber\"; // \uc2e0\uaddc\ub85c \ube14\ub85d\uc774 \uc0dd\uc131\ub420 \ub54c \ub9c8\ub2e4 \ube14\ub85d \uc815\ubcf4 \uad6c\ub3c5 var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'NewBlock'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 hash \uac00 'A7FC574491B18ADD8E3DD60E7442CB34D90A4862E30E9E9B5412154EBFB0E100' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.hash='A7FC574491B18ADD8E3DD60E7442CB34D90A4862E30E9E9B5412154EBFB0E100'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 \ud0c0\uc785\uc774 'transfer' \uc774\uace0, // sender \uc8fc\uc18c\uac00 'D8C2C3D121696F51B733F7CF36C8AE60F8F264CC' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.type='transfer' AND tx.sender='D8C2C3D121696F51B733F7CF36C8AE60F8F264CC'\") sub.start( resp => console.log(resp) ) ... // \ud2b8\ub79c\uc7ad\uc158 \ud0c0\uc785\uc774 'transfer' \uc774\uace0, // sender \uc8fc\uc18c\uac00 'D8C2C3D121696F51B733F7CF36C8AE60F8F264CC' \uc778 // \ud2b8\ub79c\uc7ad\uc158\uc774 \ucc98\ub9ac\ub418\uc5c8\uc744 \ub54c, \ud574\ub2f9 \ud2b8\ub79c\uc7ad\uc158 \uc815\ubcf4 \uc218\uc2e0. var sub = new Subscriber(\"ws://localhost:26657/websocket\", \"tm.event = 'Tx' AND tx.type='transfer' AND tx.sender='D8C2C3D121696F51B733F7CF36C8AE60F8F264CC'\") sub.start( resp => console.log(resp) ) ...","title":"Example"},{"location":"transactions/","text":"Transactions Data structure TrxProto export interface TrxProto { version: number; time: Long; nonce: Long; from: Uint8Array; to: Uint8Array; Amount: Uint8Array; Gas: Uint8Array; type: number; Payload: Uint8Array; sig: Uint8Array; } Transaction Payload TrxPayloadTransferProto It is equal to TrxProto TrxPayloadStakingProto It is equal to TrxProto TrxPayloadUnstakingProto export interface TrxPayloadUnstakingProto { txHash: Uint8Array; } txHash : TrxPayloadProposalProto TrxPayloadVotingProto","title":"Transactions"},{"location":"transactions/#transactions","text":"","title":"Transactions"},{"location":"transactions/#data-structure","text":"","title":"Data structure"},{"location":"transactions/#trxproto","text":"export interface TrxProto { version: number; time: Long; nonce: Long; from: Uint8Array; to: Uint8Array; Amount: Uint8Array; Gas: Uint8Array; type: number; Payload: Uint8Array; sig: Uint8Array; }","title":"TrxProto"},{"location":"transactions/#transaction-payload","text":"","title":"Transaction Payload"},{"location":"transactions/#trxpayloadtransferproto","text":"It is equal to TrxProto","title":"TrxPayloadTransferProto"},{"location":"transactions/#trxpayloadstakingproto","text":"It is equal to TrxProto","title":"TrxPayloadStakingProto"},{"location":"transactions/#trxpayloadunstakingproto","text":"export interface TrxPayloadUnstakingProto { txHash: Uint8Array; } txHash :","title":"TrxPayloadUnstakingProto"},{"location":"transactions/#trxpayloadproposalproto","text":"","title":"TrxPayloadProposalProto"},{"location":"transactions/#trxpayloadvotingproto","text":"","title":"TrxPayloadVotingProto"},{"location":"transactions/#_1","text":"","title":""}]}